<?php

namespace helpers;

/**
 * Class generateTSInterfaces
 */
class generateTSInterfaces
{


	/**
	 * generateTSInterfaces constructor.
	 */
	public function __construct()
	{
		$this->createFunctionsFromArray(self::returnArray());
		$this->createKSRFile(self::returnArray());
	}

	private static function returnArray(): array
	{
		$array = [];

		$array['acc'][] = 'acc_db_request(comment:string, dbtable:string):number';
		$array['acc'][] = 'acc_log_request(comment:string):number';
		$array['acc'][] = 'acc_request(comment:string, dbtable:string):number';
		$array['acc_radius'][] = 'request(comment:string):number';
		$array['alias_db'][] = 'lookup(stable:string):number';
		$array['alias_db'][] = 'lookup_ex(stable:string, sflags:string):number';
		$array['app_jsdt'][] = 'dofile(script:string):number';
		$array['app_jsdt'][] = 'dostring(script:string):number';
		$array['app_jsdt'][] = 'run(func:string):number';
		$array['app_jsdt'][] = 'run_p1(func:string, p1:string):number';
		$array['app_jsdt'][] = 'run_p2(func:string, p1:string, p2:string):number';
		$array['app_jsdt'][] = 'run_p3(func:string, p1:string, p2:string, p3:string):number';
		$array['app_jsdt'][] = 'runstring(script:string):number';
		$array['app_lua'][] = 'dofile(script:string):number';
		$array['app_lua'][] = 'dostring(script:string):number';
		$array['app_lua'][] = 'run(func:string):number';
		$array['app_lua'][] = 'run_p1(func:string, p1:string):number';
		$array['app_lua'][] = 'run_p2(func:string, p1:string, p2:string):number';
		$array['app_lua'][] = 'run_p3(func:string, p1:string, p2:string, p3:string):number';
		$array['app_lua'][] = 'runstring(script:string):number';
		$array['app_python'][] = 'exec(method:string):number';
		$array['app_python'][] = 'exec_p1(method:string, p1:string):number';
		$array['app_python'][] = 'execx(method:string):number';
		$array['app_python3'][] = 'exec(method:string):number';
		$array['app_python3'][] = 'exec_p1(method:string, p1:string):number';
		$array['app_python3'][] = 'execx(method:string):number';
		$array['app_ruby'][] = 'run(func:string):number';
		$array['app_ruby'][] = 'run_p1(func:string, p1:string):number';
		$array['app_ruby'][] = 'run_p2(func:string, p1:string, p2:string):number';
		$array['app_ruby'][] = 'run_p3(func:string, p1:string, p2:string, p3:string):number';
		$array['app_sqlang'][] = 'dofile(script:string):number';
		$array['app_sqlang'][] = 'dostring(script:string):number';
		$array['app_sqlang'][] = 'run(func:string):number';
		$array['app_sqlang'][] = 'run_p1(func:string, p1:string):number';
		$array['app_sqlang'][] = 'run_p2(func:string, p1:string, p2:string):number';
		$array['app_sqlang'][] = 'run_p3(func:string, p1:string, p2:string, p3:string):number';
		$array['app_sqlang'][] = 'runstring(script:string):number';
		$array['async'][] = 'ms_route(rn:string, s:number):number';
		$array['async'][] = 'route(rn:string, s:number):number';
		$array['async'][] = 'task_route(rn:string):number';
		$array['auth'][] = 'auth_challenge(realm:string, flags:number):number';
		$array['auth'][] = 'consume_credentials():number';
		$array['auth'][] = 'has_credentials(srealm:string):number';
		$array['auth'][] = 'pv_auth_check(srealm:string, spasswd:string, vflags:number, vchecks:number):number';
		$array['auth_db'][] = 'auth_check(srealm:string, stable:string, iflags:number):number';
		$array['auth_db'][] = 'is_subscriber(suri:string, stable:string, iflags:number):number';
		$array['auth_ephemeral'][] = 'autheph_authenticate(susername:string, spassword:string):number';
		$array['auth_ephemeral'][] = 'autheph_check(srealm:string):number';
		$array['auth_ephemeral'][] = 'autheph_proxy(srealm:string):number';
		$array['auth_ephemeral'][] = 'autheph_www(srealm:string):number';
		$array['auth_ephemeral'][] = 'autheph_www_method(srealm:string, smethod:string):number';
		$array['auth_radius'][] = 'proxy_authorize(srealm:string):number';
		$array['auth_radius'][] = 'proxy_authorize_user(srealm:string, suser:string):number';
		$array['auth_radius'][] = 'www_authorize(srealm:string):number';
		$array['auth_radius'][] = 'www_authorize_user(srealm:string, suser:string):number';
		$array['auth_xkeys'][] = 'auth_xkeys_add(shdr:string, skey:string, salg:string, sdata:string):number';
		$array['auth_xkeys'][] = 'auth_xkeys_check(shdr:string, skey:string, salg:string, sdata:string):number';
		$array['avpops'][] = 'avp_check(param:string, check:string):number';
		$array['avpops'][] = 'avp_copy(name1:string, name2:string):number';
		$array['benchmark'][] = 'bm_log_timer(tname:string):number';
		$array['benchmark'][] = 'bm_start_timer(tname:string):number';
		$array['blst'][] = 'blst_add(t:number):number';
		$array['blst'][] = 'blst_add_default():number';
		$array['blst'][] = 'blst_add_retry_after(t_min:number, t_max:number):number';
		$array['blst'][] = 'blst_clear_ignore(mask:number):number';
		$array['blst'][] = 'blst_clear_ignore_all():number';
		$array['blst'][] = 'blst_del():number';
		$array['blst'][] = 'blst_is_blocklisted():number';
		$array['blst'][] = 'blst_rpl_clear_ignore(mask:number):number';
		$array['blst'][] = 'blst_rpl_clear_ignore_all():number';
		$array['blst'][] = 'blst_rpl_set_ignore(mask:number):number';
		$array['blst'][] = 'blst_rpl_set_ignore_all():number';
		$array['blst'][] = 'blst_set_ignore(mask:number):number';
		$array['blst'][] = 'blst_set_ignore_all():number';
		$array['call_control'][] = 'call_control():number';
		$array['call_obj'][] = 'free(num_obj:number):number';
		$array['call_obj'][] = 'get():number';
		$array['cfgutils'][] = 'abort():number';
		$array['cfgutils'][] = 'check_route_exists(route:string):number';
		$array['cfgutils'][] = 'core_hash(s1:string, s2:string, sz:number):number';
		$array['cfgutils'][] = 'lock(lkey:string):number';
		$array['cfgutils'][] = 'pkg_status():number';
		$array['cfgutils'][] = 'pkg_summary():number';
		$array['cfgutils'][] = 'rand_event():number';
		$array['cfgutils'][] = 'rand_get_prob():number';
		$array['cfgutils'][] = 'rand_reset_prob():number';
		$array['cfgutils'][] = 'rand_set_prob(percent_par:number):number';
		$array['cfgutils'][] = 'route_if_exists(route:string):number';
		$array['cfgutils'][] = 'shm_status():number';
		$array['cfgutils'][] = 'shm_summary():number';
		$array['cfgutils'][] = 'sleep(v:number):number';
		$array['cfgutils'][] = 'trylock(lkey:string):number';
		$array['cfgutils'][] = 'unlock(lkey:string):number';
		$array['cfgutils'][] = 'usleep(v:number):number';
		$array['cnxcc'][] = 'get_channel_count(sclient:string, pvname:string):number';
		$array['cnxcc'][] = 'set_max_channels(sclient:string, max_chan:number):number';
		$array['cnxcc'][] = 'set_max_credit(sclient:string, scredit:string, sconnect:string, scps:string, initp:number, finishp:number):number';
		$array['cnxcc'][] = 'set_max_time(sclient:string, max_secs:number):number';
		$array['cnxcc'][] = 'terminate_all(sclient:string):number';
		$array['cnxcc'][] = 'update_max_time(sclient:string, secs:number):number';
		$array['corex'][] = 'append_branch():number';
		$array['corex'][] = 'append_branch_uri(uri:string):number';
		$array['corex'][] = 'append_branch_uri_q(uri:string, q:string):number';
		$array['corex'][] = 'file_read(fname:string):number';
		$array['corex'][] = 'file_write(fname:string, fdata:string):number';
		$array['corex'][] = 'has_ruri_user():number';
		$array['corex'][] = 'has_user_agent():number';
		$array['corex'][] = 'is_faked_msg():number';
		$array['corex'][] = 'isxflagset(fval:number):number';
		$array['corex'][] = 'resetxflag(fval:number):number';
		$array['corex'][] = 'send_data(uri:string, data:string):number';
		$array['corex'][] = 'sendx(uri:string, sock:string, data:string):number';
		$array['corex'][] = 'set_recv_socket(ssock:string):number';
		$array['corex'][] = 'set_recv_socket_name(ssock:string):number';
		$array['corex'][] = 'set_send_socket(ssock:string):number';
		$array['corex'][] = 'set_send_socket_name(ssock:string):number';
		$array['corex'][] = 'set_source_address(saddr:string):number';
		$array['corex'][] = 'setxflag(fval:number):number';
		$array['corex'][] = 'via_add_srvid(fval:number):number';
		$array['corex'][] = 'via_add_xavp_params(fval:number):number';
		$array['corex'][] = 'via_use_xavp_fields(fval:number):number';
		$array['counters'][] = 'add(sname:string, v:number):number';
		$array['counters'][] = 'inc(sname:string):number';
		$array['counters'][] = 'reset(sname:string):number';
		$array['crypto'][] = 'aes_decrypt(ins:string, keys:string, dpv:string):number';
		$array['crypto'][] = 'aes_encrypt(ins:string, keys:string, dpv:string):number';
		$array['debugger'][] = 'dbg_pv_dump():number';
		$array['debugger'][] = 'dbg_pv_dump_ex(mask:number, level:number):number';
		$array['dialog'][] = 'dlg_bridge(sfrom:string, sto:string, soproxy:string):number';
		$array['dialog'][] = 'dlg_bye(side:string):number';
		$array['dialog'][] = 'dlg_db_load_callid(callid:string):number';
		$array['dialog'][] = 'dlg_db_load_extra():number';
		$array['dialog'][] = 'dlg_get(sc:string, sf:string, st:string):number';
		$array['dialog'][] = 'dlg_isflagset(val:number):number';
		$array['dialog'][] = 'dlg_manage():number';
		$array['dialog'][] = 'dlg_reset_property(pval:string):number';
		$array['dialog'][] = 'dlg_resetflag(val:number):number';
		$array['dialog'][] = 'dlg_set_property(pval:string):number';
		$array['dialog'][] = 'dlg_set_timeout(to:number):number';
		$array['dialog'][] = 'dlg_set_timeout_id(to:number, he:number, hi:number):number';
		$array['dialog'][] = 'dlg_setflag(val:number):number';
		$array['dialog'][] = 'get_profile_size(sprofile:string, svalue:string, spv:string):number';
		$array['dialog'][] = 'get_profile_size_static(sprofile:string, spv:string):number';
		$array['dialog'][] = 'is_in_profile(sprofile:string, svalue:string):number';
		$array['dialog'][] = 'is_in_profile_static(sprofile:string):number';
		$array['dialog'][] = 'is_known_dlg():number';
		$array['dialog'][] = 'set_dlg_profile(sprofile:string, svalue:string):number';
		$array['dialog'][] = 'set_dlg_profile_static(sprofile:string):number';
		$array['dialog'][] = 'unset_dlg_profile(sprofile:string, svalue:string):number';
		$array['dialog'][] = 'unset_dlg_profile_static(sprofile:string):number';
		$array['dialog'][] = 'var_get(name:string):number';
		$array['dialog'][] = 'var_gete(name:string):number';
		$array['dialog'][] = 'var_getw(name:string):number';
		$array['dialog'][] = 'var_is_null(name:string):number';
		$array['dialog'][] = 'var_rm(name:string):number';
		$array['dialog'][] = 'var_sets(name:string, val:string):number';
		$array['dialplan'][] = 'dp_match(dpid:number, src:string):number';
		$array['dialplan'][] = 'dp_replace(dpid:number, src:string, dst:string):number';
		$array['dispatcher'][] = 'ds_is_from_list(group:number):number';
		$array['dispatcher'][] = 'ds_is_from_list_mode(vset:number, vmode:number):number';
		$array['dispatcher'][] = 'ds_is_from_list_uri(vset:number, vmode:number, vuri:string):number';
		$array['dispatcher'][] = 'ds_is_from_lists():number';
		$array['dispatcher'][] = 'ds_list_exists(set:number):number';
		$array['dispatcher'][] = 'ds_load_unset():number';
		$array['dispatcher'][] = 'ds_load_update():number';
		$array['dispatcher'][] = 'ds_mark_dst():number';
		$array['dispatcher'][] = 'ds_mark_dst_state(sval:string):number';
		$array['dispatcher'][] = 'ds_next_domain():number';
		$array['dispatcher'][] = 'ds_next_dst():number';
		$array['dispatcher'][] = 'ds_reload():number';
		$array['dispatcher'][] = 'ds_select(set:number, alg:number):number';
		$array['dispatcher'][] = 'ds_select_domain(set:number, alg:number):number';
		$array['dispatcher'][] = 'ds_select_domain_limit(set:number, alg:number, limit:number):number';
		$array['dispatcher'][] = 'ds_select_dst(set:number, alg:number):number';
		$array['dispatcher'][] = 'ds_select_dst_limit(set:number, alg:number, limit:number):number';
		$array['dispatcher'][] = 'ds_select_limit(set:number, alg:number, limit:number):number';
		$array['dispatcher'][] = 'ds_select_routes(srules:string, smode:string):number';
		$array['dispatcher'][] = 'ds_select_routes_limit(srules:string, smode:string, rlimit:number):number';
		$array['dispatcher'][] = 'ds_set_domain():number';
		$array['dispatcher'][] = 'ds_set_dst():number';
		$array['diversion'][] = 'add_diversion(reason:string):number';
		$array['diversion'][] = 'add_diversion_uri(reason:string, uri:string):number';
		$array['dlgs'][] = 'dlgs_count(vfield:string, vop:string, vdata:string):number';
		$array['dlgs'][] = 'dlgs_init(src:string, dst:string, data:string):number';
		$array['dlgs'][] = 'dlgs_tags_add(vtags:string):number';
		$array['dlgs'][] = 'dlgs_tags_count(vtags:string):number';
		$array['dlgs'][] = 'dlgs_tags_rm(vtags:string):number';
		$array['dlgs'][] = 'dlgs_update():number';
		$array['dmq'][] = 'bcast_message(peer_str:string, body_str:string, ct_str:string):number';
		$array['dmq'][] = 'handle_message():number';
		$array['dmq'][] = 'handle_message_rc(returnval:number):number';
		$array['dmq'][] = 'is_from_node():number';
		$array['dmq'][] = 'send_message(peer_str:string, to_str:string, body_str:string, ct_str:string):number';
		$array['dmq'][] = 't_replicate():number';
		$array['dmq'][] = 't_replicate_mode(mode:number):number';
		$array['domain'][] = 'is_domain_local(sdomain:string):number';
		$array['domain'][] = 'is_from_local():number';
		$array['domain'][] = 'is_uri_host_local():number';
		$array['domain'][] = 'lookup_domain(_sdomain:string):number';
		$array['domain'][] = 'lookup_domain_prefix(_sdomain:string, _sprefix:string):number';
		$array['drouting'][] = 'do_routing(grp_id:number):number';
		$array['drouting'][] = 'do_routing_furi():number';
		$array['drouting'][] = 'goes_to_gw():number';
		$array['drouting'][] = 'goes_to_gw_type(type:number):number';
		$array['drouting'][] = 'is_from_gw():number';
		$array['drouting'][] = 'is_from_gw_type(type:number):number';
		$array['drouting'][] = 'is_from_gw_type_flags(type:number, flags:number):number';
		$array['drouting'][] = 'next_routing():number';
		$array['drouting'][] = 'use_next_gw():number';
		$array['enum'][] = 'enum_i_query_suffix(vsuffix:string):number';
		$array['enum'][] = 'enum_pv_query(ve164:string):number';
		$array['enum'][] = 'enum_pv_query_suffix(ve164:string, vsuffix:string):number';
		$array['enum'][] = 'enum_pv_query_suffix_service(ve164:string, vsuffix:string, vservice:string):number';
		$array['enum'][] = 'enum_query():number';
		$array['enum'][] = 'enum_query_suffix(vsuffix:string):number';
		$array['enum'][] = 'enum_query_suffix_service(vsuffix:string, vservice:string):number';
		$array['enum'][] = 'i_enum_query():number';
		$array['enum'][] = 'i_enum_query_suffix_service(vsuffix:string, vservice:string):number';
		$array['enum'][] = 'is_from_user_enum():number';
		$array['enum'][] = 'is_from_user_enum_suffix(vsuffix:string):number';
		$array['enum'][] = 'is_from_user_enum_suffix_service(vsuffix:string, vservice:string):number';
		$array['evapi'][] = 'async_multicast(sdata:string, stag:string):number';
		$array['evapi'][] = 'async_relay(sdata:string):number';
		$array['evapi'][] = 'async_unicast(sdata:string, stag:string):number';
		$array['evapi'][] = 'close():number';
		$array['evapi'][] = 'relay(sdata:string):number';
		$array['evapi'][] = 'relay_multicast(sdata:string, stag:string):number';
		$array['evapi'][] = 'relay_unicast(sdata:string, stag:string):number';
		$array['evapi'][] = 'set_tag(stag:string):number';
		$array['exec'][] = 'exec_avp(cmd:string):number';
		$array['exec'][] = 'exec_cmd(cmd:string):number';
		$array['exec'][] = 'exec_dset(cmd:string):number';
		$array['exec'][] = 'exec_msg(cmd:string):number';
		$array['geoip'][] = 'match(tomatch:string, pvclass:string):number';
		$array['geoip2'][] = 'match(tomatch:string, pvclass:string):number';
		$array['group'][] = 'is_user_in(uri:string, grp:string):number';
		$array['htable'][] = 'sht_dec(htname:string, itname:string):number';
		$array['htable'][] = 'sht_get(htname:string, itname:string):number';
		$array['htable'][] = 'sht_gete(htname:string, itname:string):number';
		$array['htable'][] = 'sht_getw(htname:string, itname:string):number';
		$array['htable'][] = 'sht_inc(htname:string, itname:string):number';
		$array['htable'][] = 'sht_is_null(htname:string, itname:string):number';
		$array['htable'][] = 'sht_iterator_end(iname:string):number';
		$array['htable'][] = 'sht_iterator_next(iname:string):number';
		$array['htable'][] = 'sht_iterator_start(iname:string, hname:string):number';
		$array['htable'][] = 'sht_lock(htname:string, skey:string):number';
		$array['htable'][] = 'sht_match_name(sname:string, sop:string, sval:string):number';
		$array['htable'][] = 'sht_match_str_value(sname:string, sop:string, sval:string):number';
		$array['htable'][] = 'sht_reset(hname:string):number';
		$array['htable'][] = 'sht_rm(hname:string, iname:string):number';
		$array['htable'][] = 'sht_rm_name(sname:string, sop:string, sval:string):number';
		$array['htable'][] = 'sht_rm_name_re(htname:string, rexp:string):number';
		$array['htable'][] = 'sht_rm_value(sname:string, sop:string, sval:string):number';
		$array['htable'][] = 'sht_rm_value_re(htname:string, rexp:string):number';
		$array['htable'][] = 'sht_setex(htname:string, itname:string, itval:number):number';
		$array['htable'][] = 'sht_seti(htname:string, itname:string, itval:number):number';
		$array['htable'][] = 'sht_sets(htname:string, itname:string, itval:string):number';
		$array['htable'][] = 'sht_setxi(htname:string, itname:string, itval:number, exval:number):number';
		$array['htable'][] = 'sht_setxs(htname:string, itname:string, itval:string, exval:number):number';
		$array['htable'][] = 'sht_unlock(htname:string, skey:string):number';
		$array['http_async_client'][] = 'query(sdata:string, rn:string):number';
		$array['http_client'][] = 'curl_connect(con:string, url:string, dpv:string):number';
		$array['http_client'][] = 'curl_connect_post(con:string, url:string, ctype:string, data:string, dpv:string):number';
		$array['http_client'][] = 'query(url:string, dpv:string):number';
		$array['http_client'][] = 'query_post(url:string, post:string, dpv:string):number';
		$array['http_client'][] = 'query_post_hdrs(url:string, post:string, hdrs:string, dpv:string):number';
		$array['imc'][] = 'imc_manager():number';
		$array['ipops'][] = 'compare_ips(_sval1:string, _sval2:string):number';
		$array['ipops'][] = 'compare_pure_ips(_sval1:string, _sval2:string):number';
		$array['ipops'][] = 'detailed_ip_type(_sval:string, _dpv:string):number';
		$array['ipops'][] = 'detailed_ipv4_type(_sval:string, _dpv:string):number';
		$array['ipops'][] = 'detailed_ipv6_type(_sval:string, _dpv:string):number';
		$array['ipops'][] = 'dns_int_match_ip(vhn:string, vip:string):number';
		$array['ipops'][] = 'dns_query(naptrname:string, pvid:string):number';
		$array['ipops'][] = 'dns_sys_match_ip(vhn:string, vip:string):number';
		$array['ipops'][] = 'ip_is_in_subnet(_sval1:string, _sval2:string):number';
		$array['ipops'][] = 'ip_type(sval:string):number';
		$array['ipops'][] = 'is_in_subnet(_sval1:string, _sval2:string):number';
		$array['ipops'][] = 'is_ip(sval:string):number';
		$array['ipops'][] = 'is_ip_rfc1918(sval:string):number';
		$array['ipops'][] = 'is_ip4(sval:string):number';
		$array['ipops'][] = 'is_ip6(sval:string):number';
		$array['ipops'][] = 'is_ip6_reference(sval:string):number';
		$array['ipops'][] = 'is_pure_ip(sval:string):number';
		$array['ipops'][] = 'naptr_query(naptrname:string, pvid:string):number';
		$array['ipops'][] = 'srv_query(naptrname:string, pvid:string):number';
		$array['jansson'][] = 'get(spath:string, sdoc:string, spv:string):number';
		$array['jsonrpcs'][] = 'dispatch():number';
		$array['jsonrpcs'][] = 'exec(scmd:string):number';
		$array['jsonrpcs'][] = 'execx(scmd:string):number';
		$array['jsonrpcs'][] = 'response():number';
		$array['kafka'][] = 'send(s_topic:string, s_message:string):number';
		$array['kafka'][] = 'send_key(s_topic:string, s_message:string, s_key:string):number';
		$array['kazoo'][] = 'kazoo_publish(exchange:string, routing_key:string, payload:string):number';
		$array['kazoo'][] = 'kazoo_subscribe(payload:string):number';
		$array['keepalive'][] = 'add_destination(uri:string, owner:string):number';
		$array['keepalive'][] = 'del_destination(uri:string, owner:string):number';
		$array['keepalive'][] = 'is_alive(dest:string):number';
		$array['kex'][] = 'resetdebug():number';
		$array['kex'][] = 'setdebug(lval:number):number';
		$array['kx'][] = 'get_au():number';
		$array['kx'][] = 'get_body():number';
		$array['kx'][] = 'get_bodylen():number';
		$array['kx'][] = 'get_callid():number';
		$array['kx'][] = 'get_conid():number';
		$array['kx'][] = 'get_cturi():number';
		$array['kx'][] = 'get_def(dname:string):number';
		$array['kx'][] = 'get_defn(dname:string):number';
		$array['kx'][] = 'get_duri():number';
		$array['kx'][] = 'get_fhost():number';
		$array['kx'][] = 'get_furi():number';
		$array['kx'][] = 'get_fuser():number';
		$array['kx'][] = 'get_method():number';
		$array['kx'][] = 'get_msgbuf():number';
		$array['kx'][] = 'get_msglen():number';
		$array['kx'][] = 'get_msgtype():number';
		$array['kx'][] = 'get_nhuri():number';
		$array['kx'][] = 'get_ouri():number';
		$array['kx'][] = 'get_proto():number';
		$array['kx'][] = 'get_protoid():number';
		$array['kx'][] = 'get_rcv_sock_name():number';
		$array['kx'][] = 'get_rcvadvip():number';
		$array['kx'][] = 'get_rcvadvport():number';
		$array['kx'][] = 'get_rcvip():number';
		$array['kx'][] = 'get_rcvport():number';
		$array['kx'][] = 'get_rhost():number';
		$array['kx'][] = 'get_ruri():number';
		$array['kx'][] = 'get_ruser():number';
		$array['kx'][] = 'get_send_sock():number';
		$array['kx'][] = 'get_send_sock_name():number';
		$array['kx'][] = 'get_srcip():number';
		$array['kx'][] = 'get_srcport():number';
		$array['kx'][] = 'get_status():number';
		$array['kx'][] = 'get_thost():number';
		$array['kx'][] = 'get_timestamp():number';
		$array['kx'][] = 'get_turi():number';
		$array['kx'][] = 'get_tuser():number';
		$array['kx'][] = 'get_ua():number';
		$array['kx'][] = 'gete_au():number';
		$array['kx'][] = 'gete_body():number';
		$array['kx'][] = 'gete_cturi():number';
		$array['kx'][] = 'gete_duri():number';
		$array['kx'][] = 'gete_fhost():number';
		$array['kx'][] = 'gete_fuser():number';
		$array['kx'][] = 'gete_rhost():number';
		$array['kx'][] = 'gete_ruser():number';
		$array['kx'][] = 'gete_thost():number';
		$array['kx'][] = 'gete_tuser():number';
		$array['kx'][] = 'gete_ua():number';
		$array['kx'][] = 'gets_status():number';
		$array['kx'][] = 'getw_au():number';
		$array['kx'][] = 'getw_body():number';
		$array['kx'][] = 'getw_cturi():number';
		$array['kx'][] = 'getw_duri():number';
		$array['kx'][] = 'getw_fhost():number';
		$array['kx'][] = 'getw_fuser():number';
		$array['kx'][] = 'getw_rhost():number';
		$array['kx'][] = 'getw_ruser():number';
		$array['kx'][] = 'getw_thost():number';
		$array['kx'][] = 'getw_tuser():number';
		$array['kx'][] = 'getw_ua():number';
		$array['lcr'][] = 'defunct_gw(defunct_period:number):number';
		$array['lcr'][] = 'from_any_gw():number';
		$array['lcr'][] = 'from_any_gw_addr(addr_str:string, transport:number):number';
		$array['lcr'][] = 'from_gw(lcr_id:number):number';
		$array['lcr'][] = 'from_gw_addr(lcr_id:number, addr_str:string, transport:number):number';
		$array['lcr'][] = 'inactivate_gw():number';
		$array['lcr'][] = 'load_gws(lcr_id:number):number';
		$array['lcr'][] = 'load_gws_furi(lcr_id:number, ruri_user:string, from_uri:string):number';
		$array['lcr'][] = 'load_gws_ruser(lcr_id:number, ruri_user:string):number';
		$array['lcr'][] = 'next_gw():number';
		$array['lcr'][] = 'to_any_gw():number';
		$array['lcr'][] = 'to_any_gw_addr(addr_str:string, transport:number):number';
		$array['lcr'][] = 'to_gw(lcr_id:number):number';
		$array['lcr'][] = 'to_gw_addr(lcr_id:number, addr_str:string, transport:number):number';
		$array['log_custom'][] = 'log_udp(txt:string):number';
		$array['log_systemd'][] = 'sd_journal_print(slev:string, stxt:string):number';
		$array['log_systemd'][] = 'sd_journal_send_xvap(xname:string):number';
		$array['maxfwd'][] = 'is_maxfwd_lt(limit:number):number';
		$array['maxfwd'][] = 'process_maxfwd(limit:number):number';
		$array['mediaproxy'][] = 'end_media_session():number';
		$array['mediaproxy'][] = 'engage_media_proxy():number';
		$array['mediaproxy'][] = 'use_media_proxy():number';
		$array['misc_radius'][] = 'does_uri_exist():number';
		$array['misc_radius'][] = 'does_uri_exist_uval(suri:string):number';
		$array['misc_radius'][] = 'does_uri_user_exist():number';
		$array['misc_radius'][] = 'does_uri_user_exist_uval(user:string):number';
		$array['misc_radius'][] = 'is_user_in(user:string, group:string):number';
		$array['misc_radius'][] = 'load_callee_avps(user:string):number';
		$array['misc_radius'][] = 'load_caller_avps(user:string):number';
		$array['mqtt'][] = 'publish(topic:string, payload:string, qos:number):number';
		$array['mqtt'][] = 'subscribe(topic:string, qos:number):number';
		$array['mqtt'][] = 'unsubscribe(topic:string):number';
		$array['mqueue'][] = 'mq_add(mq:string, key:string, val:string):number';
		$array['mqueue'][] = 'mq_fetch(mq:string):number';
		$array['mqueue'][] = 'mq_pv_free(mq:string):number';
		$array['mqueue'][] = 'mq_size(mq:string):number';
		$array['mqueue'][] = 'mqk_get(qname:string):number';
		$array['mqueue'][] = 'mqk_gete(qname:string):number';
		$array['mqueue'][] = 'mqk_getw(qname:string):number';
		$array['mqueue'][] = 'mqv_get(qname:string):number';
		$array['mqueue'][] = 'mqv_gete(qname:string):number';
		$array['mqueue'][] = 'mqv_getw(qname:string):number';
		$array['msilo'][] = 'mdump():number';
		$array['msilo'][] = 'mdump_uri(owner_s:string):number';
		$array['msilo'][] = 'mstore():number';
		$array['msilo'][] = 'mstore_uri(owner_s:string):number';
		$array['msrp'][] = 'cmap_lookup():number';
		$array['msrp'][] = 'cmap_save():number';
		$array['msrp'][] = 'is_reply():number';
		$array['msrp'][] = 'is_request():number';
		$array['msrp'][] = 'relay():number';
		$array['msrp'][] = 'relay_flags(rtflags:number):number';
		$array['msrp'][] = 'reply(rcode:string, rtext:string, rhdrs:string):number';
		$array['msrp'][] = 'reply_flags(rtflags:number):number';
		$array['msrp'][] = 'set_dst(rtaddr:string, rfsock:string):number';
		$array['mtree'][] = 'mt_match(tname:string, tomatch:string, mval:number):number';
		$array['nat_traversal'][] = 'client_nat_test(tests:number):number';
		$array['nat_traversal'][] = 'fix_contact():number';
		$array['nat_traversal'][] = 'nat_keepalive():number';
		$array['nathelper'][] = 'add_contact_alias():number';
		$array['nathelper'][] = 'add_contact_alias_addr(ip_str:string, port_str:string, proto_str:string):number';
		$array['nathelper'][] = 'add_rcv_param(upos:number):number';
		$array['nathelper'][] = 'fix_nated_contact():number';
		$array['nathelper'][] = 'fix_nated_register():number';
		$array['nathelper'][] = 'fix_nated_sdp(level:number):number';
		$array['nathelper'][] = 'fix_nated_sdp_ip(level:number, ip:string):number';
		$array['nathelper'][] = 'handle_ruri_alias():number';
		$array['nathelper'][] = 'is_rfc1918(address:string):number';
		$array['nathelper'][] = 'nat_uac_test(tests:number):number';
		$array['nathelper'][] = 'set_alias_to_pv(uri_avp:string):number';
		$array['nathelper'][] = 'set_contact_alias():number';
		$array['nathelper'][] = 'set_contact_alias_trim():number';
		$array['ndb_mongodb'][] = 'exec(ssrv:string, sdname:string, scname:string, scmd:string, sres:string):number';
		$array['ndb_mongodb'][] = 'exec_simple(ssrv:string, sdname:string, scname:string, scmd:string, sres:string):number';
		$array['ndb_mongodb'][] = 'execx(ssrv:string, sdname:string, scname:string, scmd:string, sres:string):number';
		$array['ndb_mongodb'][] = 'find(ssrv:string, sdname:string, scname:string, scmd:string, sres:string):number';
		$array['ndb_mongodb'][] = 'find_one(ssrv:string, sdname:string, scname:string, scmd:string, sres:string):number';
		$array['ndb_mongodb'][] = 'free_reply(name:string):number';
		$array['ndb_mongodb'][] = 'next_reply(name:string):number';
		$array['ndb_redis'][] = 'redis_cmd(srv:string, rcmd:string, sres:string):number';
		$array['ndb_redis'][] = 'redis_cmd_p1(srv:string, rcmd:string, p1:string, sres:string):number';
		$array['ndb_redis'][] = 'redis_cmd_p2(srv:string, rcmd:string, p1:string, p2:string, sres:string):number';
		$array['ndb_redis'][] = 'redis_cmd_p3(srv:string, rcmd:string, p1:string, p2:string, p3:string, sres:string):number';
		$array['ndb_redis'][] = 'redis_free(name:string):number';
		$array['path'][] = 'add_path():number';
		$array['path'][] = 'add_path_received():number';
		$array['path'][] = 'add_path_received_user(_user:string):number';
		$array['path'][] = 'add_path_received_user_params(_user:string, _params:string):number';
		$array['path'][] = 'add_path_user(_user:string):number';
		$array['path'][] = 'add_path_user_params(_user:string, _params:string):number';
		$array['pdt'][] = 'pd_translate(sd:string, md:number):number';
		$array['pdt'][] = 'pprefix2domain(m:number, s:number):number';
		$array['permissions'][] = 'allow_address(addr_group:number, ips:string, port:number):number';
		$array['permissions'][] = 'allow_address_group(_addr:string, _port:number):number';
		$array['permissions'][] = 'allow_source_address(addr_group:number):number';
		$array['permissions'][] = 'allow_source_address_group():number';
		$array['permissions'][] = 'allow_trusted():number';
		$array['phonenum'][] = 'match(tomatch:string, pvclass:string):number';
		$array['pike'][] = 'pike_check_ip(strip:string):number';
		$array['pike'][] = 'pike_check_req():number';
		$array['pipelimit'][] = 'pl_check(pipeid:string):number';
		$array['pipelimit'][] = 'pl_check_limit(pipeid:string, alg:string, limit:number):number';
		$array['pipelimit'][] = 'pl_drop():number';
		$array['pipelimit'][] = 'pl_drop_range(rmin:number, rmax:number):number';
		$array['pipelimit'][] = 'pl_drop_retry(rafter:number):number';
		$array['prefix_route'][] = 'prefix_route(ruser:string):number';
		$array['prefix_route'][] = 'prefix_route_uri():number';
		$array['presence'][] = 'handle_publish():number';
		$array['presence'][] = 'handle_publish_uri(sender_uri:string):number';
		$array['presence'][] = 'handle_subscribe():number';
		$array['presence'][] = 'handle_subscribe_uri(wuri:string):number';
		$array['presence'][] = 'pres_auth_status(watcher_uri:string, presentity_uri:string):number';
		$array['presence'][] = 'pres_has_subscribers(pres_uri:string, wevent:string):number';
		$array['presence'][] = 'pres_refresh_watchers(pres:string, event:string, type:number):number';
		$array['presence'][] = 'pres_refresh_watchers_file(pres:string, event:string, type:number, file_uri:string, filename:string):number';
		$array['presence'][] = 'pres_update_watchers(pres_uri:string, event:string):number';
		$array['presence_xml'][] = 'pres_check_activities(pres_uri:string, activity:string):number';
		$array['presence_xml'][] = 'pres_check_basic(pres_uri:string, status:string):number';
		$array['pua'][] = 'pua_set_publish():number';
		$array['pua'][] = 'pua_update_contact():number';
		$array['pv_headers'][] = 'pvh_append_header(hname:string, hvalue:string):number';
		$array['pv_headers'][] = 'pvh_apply_headers():number';
		$array['pv_headers'][] = 'pvh_check_header(hname:string):number';
		$array['pv_headers'][] = 'pvh_collect_headers():number';
		$array['pv_headers'][] = 'pvh_modify_header(hname:string, hvalue:string, indx:number):number';
		$array['pv_headers'][] = 'pvh_remove_header(hname:string, indx:number):number';
		$array['pv_headers'][] = 'pvh_reset_headers():number';
		$array['pvx'][] = 'avp_get(xname:string):number';
		$array['pvx'][] = 'avp_gete(xname:string):number';
		$array['pvx'][] = 'avp_getw(xname:string):number';
		$array['pvx'][] = 'avp_is_null(xname:string):number';
		$array['pvx'][] = 'avp_rm(xname:string):number';
		$array['pvx'][] = 'avp_seti(xname:string, vn:number):number';
		$array['pvx'][] = 'avp_sets(xname:string, vs:string):number';
		$array['pvx'][] = 'evalx(dst:string, fmt:string):number';
		$array['pvx'][] = 'pv_var_to_xavp(varname:string, xname:string):number';
		$array['pvx'][] = 'pv_xavi_print():number';
		$array['pvx'][] = 'pv_xavp_print():number';
		$array['pvx'][] = 'pv_xavp_to_var(xname:string):number';
		$array['pvx'][] = 'pv_xavu_print():number';
		$array['pvx'][] = 'sbranch_append():number';
		$array['pvx'][] = 'sbranch_reset():number';
		$array['pvx'][] = 'sbranch_set_ruri():number';
		$array['pvx'][] = 'shv_get(vname:string):number';
		$array['pvx'][] = 'shv_seti(vname:string, ival:number):number';
		$array['pvx'][] = 'shv_sets(vname:string, sval:string):number';
		$array['pvx'][] = 'var_get(vname:string):number';
		$array['pvx'][] = 'var_seti(vname:string, ival:number):number';
		$array['pvx'][] = 'var_sets(vname:string, sval:string):number';
		$array['pvx'][] = 'xavi_child_get(rname:string, cname:string):number';
		$array['pvx'][] = 'xavi_child_gete(rname:string, cname:string):number';
		$array['pvx'][] = 'xavi_child_getw(rname:string, cname:string):number';
		$array['pvx'][] = 'xavi_child_is_null(rname:string, cname:string):number';
		$array['pvx'][] = 'xavi_child_rm(rname:string, cname:string):number';
		$array['pvx'][] = 'xavi_child_seti(rname:string, cname:string, ival:number):number';
		$array['pvx'][] = 'xavi_child_sets(rname:string, cname:string, sval:string):number';
		$array['pvx'][] = 'xavi_get(rname:string):number';
		$array['pvx'][] = 'xavi_get_keys(rname:string, indx):number:number';
		$array['pvx'][] = 'xavi_getd(rname:string):number';
		$array['pvx'][] = 'xavi_getd_p1(rname:string, indx):number:number';
		$array['pvx'][] = 'xavi_gete(rname:string):number';
		$array['pvx'][] = 'xavi_getw(rname:string):number';
		$array['pvx'][] = 'xavi_is_null(rname:string):number';
		$array['pvx'][] = 'xavi_rm(rname:string):number';
		$array['pvx'][] = 'xavi_seti(rname:string, ival:number):number';
		$array['pvx'][] = 'xavi_sets(rname:string, sval:string):number';
		$array['pvx'][] = 'xavp_child_get(rname:string, cname:string):number';
		$array['pvx'][] = 'xavp_child_gete(rname:string, cname:string):number';
		$array['pvx'][] = 'xavp_child_getw(rname:string, cname:string):number';
		$array['pvx'][] = 'xavp_child_is_null(rname:string, cname:string):number';
		$array['pvx'][] = 'xavp_child_rm(rname:string, cname:string):number';
		$array['pvx'][] = 'xavp_child_seti(rname:string, cname:string, ival:number):number';
		$array['pvx'][] = 'xavp_child_sets(rname:string, cname:string, sval:string):number';
		$array['pvx'][] = 'xavp_copy(src_name:string, src_idx:number, dst_name:string):number';
		$array['pvx'][] = 'xavp_copy_dst(src_name:string, src_idx:number, dst_name:string, dst_idx:number):number';
		$array['pvx'][] = 'xavp_get(rname:string):number';
		$array['pvx'][] = 'xavp_get_keys(rname:string, indx):number:number';
		$array['pvx'][] = 'xavp_getd(rname:string):number';
		$array['pvx'][] = 'xavp_getd_p1(rname:string, indx):number:number';
		$array['pvx'][] = 'xavp_gete(rname:string):number';
		$array['pvx'][] = 'xavp_getw(rname:string):number';
		$array['pvx'][] = 'xavp_is_null(rname:string):number';
		$array['pvx'][] = 'xavp_params_explode(sparams:string, sxname:string):number';
		$array['pvx'][] = 'xavp_params_implode(sxname:string, svname:string):number';
		$array['pvx'][] = 'xavp_rm(rname:string):number';
		$array['pvx'][] = 'xavp_seti(rname:string, ival:number):number';
		$array['pvx'][] = 'xavp_sets(rname:string, sval:string):number';
		$array['pvx'][] = 'xavp_slist_explode(slist:string, sep:string, mode:string, sxname:string):number';
		$array['pvx'][] = 'xavu_child_get(rname:string, cname:string):number';
		$array['pvx'][] = 'xavu_child_gete(rname:string, cname:string):number';
		$array['pvx'][] = 'xavu_child_getw(rname:string, cname:string):number';
		$array['pvx'][] = 'xavu_child_is_null(rname:string, cname:string):number';
		$array['pvx'][] = 'xavu_child_rm(rname:string, cname:string):number';
		$array['pvx'][] = 'xavu_child_seti(rname:string, cname:string, ival:number):number';
		$array['pvx'][] = 'xavu_child_sets(rname:string, cname:string, sval:string):number';
		$array['pvx'][] = 'xavu_get(rname:string):number';
		$array['pvx'][] = 'xavu_gete(rname:string):number';
		$array['pvx'][] = 'xavu_getw(rname:string):number';
		$array['pvx'][] = 'xavu_is_null(rname:string):number';
		$array['pvx'][] = 'xavu_rm(rname:string):number';
		$array['pvx'][] = 'xavu_seti(rname:string, ival:number):number';
		$array['pvx'][] = 'xavu_sets(rname:string, sval:string):number';
		$array['rabbitmq'][] = 'publish(exchange:string, routingkey:string, contenttype:string, messagebody:string):number';
		$array['rabbitmq'][] = 'publish_consume(exchange:string, routingkey:string, contenttype:string, messagebody:string, dpv:string):number';
		$array['regex'][] = 'pcre_match(string:string, regex:string):number';
		$array['regex'][] = 'pcre_match_group(string:string, num_pcre:number):number';
		$array['registrar'][] = 'add_sock_hdr(hdr_name:string):number';
		$array['registrar'][] = 'lookup(table:string):number';
		$array['registrar'][] = 'lookup_branches(_dtable:string):number';
		$array['registrar'][] = 'lookup_to_dset(table:string, uri:string):number';
		$array['registrar'][] = 'lookup_uri(table:string, uri:string):number';
		$array['registrar'][] = 'reg_fetch_contacts(dtable:string, uri:string, profile:string):number';
		$array['registrar'][] = 'reg_free_contacts(profile:string):number';
		$array['registrar'][] = 'reg_send_reply():number';
		$array['registrar'][] = 'registered(table:string):number';
		$array['registrar'][] = 'registered_action(_dtable:string, _uri:string, _f:number, _aflags:number):number';
		$array['registrar'][] = 'registered_flags(_dtable:string, _uri:string, _f:number):number';
		$array['registrar'][] = 'registered_uri(_dtable:string, _uri:string):number';
		$array['registrar'][] = 'save(table:string, flags:number):number';
		$array['registrar'][] = 'save_uri(table:string, flags:number, uri:string):number';
		$array['registrar'][] = 'set_q_override(new_q:string):number';
		$array['registrar'][] = 'unregister(_dtable:string, _uri:string):number';
		$array['registrar'][] = 'unregister_ruid(_dtable:string, _uri:string, _ruid:string):number';
		$array['rls'][] = 'handle_notify():number';
		$array['rls'][] = 'handle_subscribe():number';
		$array['rls'][] = 'handle_subscribe_uri(wuri:string):number';
		$array['rls'][] = 'update_subs(uri:string, event:string):number';
		$array['rr'][] = 'add_rr_param(sparam:string):number';
		$array['rr'][] = 'check_route_param(sre:string):number';
		$array['rr'][] = 'is_direction(dir:string):number';
		$array['rr'][] = 'loose_route():number';
		$array['rr'][] = 'loose_route_mode(vmode:number):number';
		$array['rr'][] = 'loose_route_preloaded():number';
		$array['rr'][] = 'next_hop_route():number';
		$array['rr'][] = 'record_route():number';
		$array['rr'][] = 'record_route_advertised_address(addr:string):number';
		$array['rr'][] = 'record_route_params(sparams:string):number';
		$array['rr'][] = 'record_route_preset(addr1:string, addr2:string):number';
		$array['rr'][] = 'record_route_preset_one(addr1:string):number';
		$array['rr'][] = 'remove_record_route():number';
		$array['rtjson'][] = 'init_routes(srdoc:string):number';
		$array['rtjson'][] = 'next_route():number';
		$array['rtjson'][] = 'push_routes():number';
		$array['rtjson'][] = 'update_branch():number';
		$array['rtpengine'][] = 'block_dtmf(flags:string):number';
		$array['rtpengine'][] = 'block_dtmf0():number';
		$array['rtpengine'][] = 'block_media(flags:string):number';
		$array['rtpengine'][] = 'block_media0():number';
		$array['rtpengine'][] = 'play_media(flags:string):number';
		$array['rtpengine'][] = 'rtpengine_answer(flags:string):number';
		$array['rtpengine'][] = 'rtpengine_answer0():number';
		$array['rtpengine'][] = 'rtpengine_delete(flags:string):number';
		$array['rtpengine'][] = 'rtpengine_delete0():number';
		$array['rtpengine'][] = 'rtpengine_manage(flags:string):number';
		$array['rtpengine'][] = 'rtpengine_manage0():number';
		$array['rtpengine'][] = 'rtpengine_offer(flags:string):number';
		$array['rtpengine'][] = 'rtpengine_offer0():number';
		$array['rtpengine'][] = 'rtpengine_query(flags:string):number';
		$array['rtpengine'][] = 'rtpengine_query0():number';
		$array['rtpengine'][] = 'set_rtpengine_set(r1:number):number';
		$array['rtpengine'][] = 'set_rtpengine_set2(r1:number, r2:number):number';
		$array['rtpengine'][] = 'start_recording():number';
		$array['rtpengine'][] = 'stop_media(flags:string):number';
		$array['rtpengine'][] = 'stop_media0():number';
		$array['rtpengine'][] = 'stop_recording():number';
		$array['rtpengine'][] = 'unblock_dtmf(flags:string):number';
		$array['rtpengine'][] = 'unblock_dtmf0():number';
		$array['rtpengine'][] = 'unblock_media(flags:string):number';
		$array['rtpengine'][] = 'unblock_media0():number';
		$array['rtpproxy'][] = 'rtpproxy_answer(flags:string):number';
		$array['rtpproxy'][] = 'rtpproxy_answer_ip(flags:string, mip:string):number';
		$array['rtpproxy'][] = 'rtpproxy_answer0():number';
		$array['rtpproxy'][] = 'rtpproxy_destroy(flags:string):number';
		$array['rtpproxy'][] = 'rtpproxy_destroy0():number';
		$array['rtpproxy'][] = 'rtpproxy_manage(flags:string):number';
		$array['rtpproxy'][] = 'rtpproxy_manage_ip(flags:string, mip:string):number';
		$array['rtpproxy'][] = 'rtpproxy_manage0():number';
		$array['rtpproxy'][] = 'rtpproxy_offer(flags:string):number';
		$array['rtpproxy'][] = 'rtpproxy_offer_ip(flags:string, mip:string):number';
		$array['rtpproxy'][] = 'rtpproxy_offer0():number';
		$array['rtpproxy'][] = 'rtpproxy_stop_stream2uac():number';
		$array['rtpproxy'][] = 'rtpproxy_stop_stream2uas():number';
		$array['rtpproxy'][] = 'rtpproxy_stream2uac(pname:string, count:number):number';
		$array['rtpproxy'][] = 'rtpproxy_stream2uas(pname:string, count:number):number';
		$array['rtpproxy'][] = 'set_rtpproxy_set(rset:number):number';
		$array['rtpproxy'][] = 'start_recording():number';
		$array['sanity'][] = 'sanity_check(mflags:number, uflags:number):number';
		$array['sanity'][] = 'sanity_check_defaults():number';
		$array['sanity'][] = 'sanity_reply():number';
		$array['sca'][] = 'call_info_update(update_mask:number, uri_to:string, uri_from:string):number';
		$array['sca'][] = 'call_info_update_default():number';
		$array['sca'][] = 'call_info_update_mask(umask:number):number';
		$array['sca'][] = 'call_info_update_turi(umask:number, sto:string):number';
		$array['sca'][] = 'handle_subscribe():number';
		$array['sdpops'][] = 'keep_codecs_by_id(codecs:string, media:string):number';
		$array['sdpops'][] = 'keep_codecs_by_name(codecs:string, media:string):number';
		$array['sdpops'][] = 'remove_codecs_by_id(codecs:string, media:string):number';
		$array['sdpops'][] = 'remove_codecs_by_name(codecs:string, media:string):number';
		$array['sdpops'][] = 'remove_line_by_prefix(prefix:string, media:string):number';
		$array['sdpops'][] = 'remove_media(media:string):number';
		$array['sdpops'][] = 'sdp_content():number';
		$array['sdpops'][] = 'sdp_content_flags(flags:number):number';
		$array['sdpops'][] = 'sdp_get(avp:string):number';
		$array['sdpops'][] = 'sdp_get_line_startswith(aname:string, sline:string):number';
		$array['sdpops'][] = 'sdp_print(llevel:number):number';
		$array['sdpops'][] = 'sdp_transport(avp:string):number';
		$array['sdpops'][] = 'sdp_with_active_media(media:string):number';
		$array['sdpops'][] = 'sdp_with_codecs_by_id(codecs:string):number';
		$array['sdpops'][] = 'sdp_with_codecs_by_name(codecs:string):number';
		$array['sdpops'][] = 'sdp_with_ice():number';
		$array['sdpops'][] = 'sdp_with_media(media:string):number';
		$array['sdpops'][] = 'sdp_with_transport(transport:string):number';
		$array['sdpops'][] = 'sdp_with_transport_like(transport:string):number';
		$array['secsipid'][] = 'secsipid_add_identity(origtn:string, desttn:string, attest:string, origid:string, x5u:string, keypath:string):number';
		$array['secsipid'][] = 'secsipid_check_identity(keypath:string):number';
		$array['secsipid'][] = 'secsipid_check_identity_pubkey(keyval:string):number';
		$array['secsipid'][] = 'secsipid_get_url(surl:string):number';
		$array['sipcapture'][] = 'float2int(_val:string, _coof:string):number';
		$array['sipcapture'][] = 'report_capture(_table:string):number';
		$array['sipcapture'][] = 'report_capture_cid(_table:string, _cid:string):number';
		$array['sipcapture'][] = 'report_capture_data(_table:string, _cid:string, _data:string):number';
		$array['sipcapture'][] = 'sip_capture():number';
		$array['sipcapture'][] = 'sip_capture_forward(puri:string):number';
		$array['sipcapture'][] = 'sip_capture_mode(_table:string, _cmdata:string):number';
		$array['sipcapture'][] = 'sip_capture_table(_table:string):number';
		$array['sipdump'][] = 'get_buf():number';
		$array['sipdump'][] = 'get_dst_ip():number';
		$array['sipdump'][] = 'get_src_ip():number';
		$array['sipdump'][] = 'get_tag():number';
		$array['sipdump'][] = 'send(stag:string):number';
		$array['sipjson'][] = 'sj_serialize(smode:string, pvn:string):number';
		$array['siptrace'][] = 'hlog(message:string):number';
		$array['siptrace'][] = 'hlog_cid(correlationid:string, message:string):number';
		$array['siptrace'][] = 'sip_trace():number';
		$array['siptrace'][] = 'sip_trace_dst(duri:string):number';
		$array['siptrace'][] = 'sip_trace_dst_cid(duri:string, cid:string):number';
		$array['siptrace'][] = 'sip_trace_dst_cid_type(duri:string, cid:string, sflag:string):number';
		$array['siptrace'][] = 'sip_trace_mode(smode:string):number';
		$array['siputils'][] = 'contact_param_decode(nparam:string):number';
		$array['siputils'][] = 'contact_param_decode_ruri(nparam:string):number';
		$array['siputils'][] = 'contact_param_encode(nparam:string, saddr:string):number';
		$array['siputils'][] = 'contact_param_rm(nparam:string):number';
		$array['siputils'][] = 'decode_contact():number';
		$array['siputils'][] = 'decode_contact_header():number';
		$array['siputils'][] = 'encode_contact(eprefix:string, eaddr:string):number';
		$array['siputils'][] = 'has_totag():number';
		$array['siputils'][] = 'is_alphanum(tval:string):number';
		$array['siputils'][] = 'is_alphanumex(tval:string, eset:string):number';
		$array['siputils'][] = 'is_first_hop():number';
		$array['siputils'][] = 'is_numeric(tval:string):number';
		$array['siputils'][] = 'is_reply():number';
		$array['siputils'][] = 'is_request():number';
		$array['siputils'][] = 'is_tel_number(tval:string):number';
		$array['siputils'][] = 'is_uri(suri:string):number';
		$array['siputils'][] = 'is_user(suser:string):number';
		$array['siputils'][] = 'options_reply():number';
		$array['siputils'][] = 'uri_param(sparam:string):number';
		$array['siputils'][] = 'uri_param_any(sparam:string):number';
		$array['siputils'][] = 'uri_param_rm(sparam:string):number';
		$array['siputils'][] = 'uri_param_value(sparam:string, svalue:string):number';
		$array['sl'][] = 'send_reply(code:number, reason:string):number';
		$array['sl'][] = 'send_reply_mode(code:number, reason:string, mode:number):number';
		$array['sl'][] = 'sl_forward_reply(code:string, reason:string):number';
		$array['sl'][] = 'sl_reply_error():number';
		$array['sl'][] = 'sl_send_reply(code:number, reason:string):number';
		$array['speeddial'][] = 'lookup(stable:string):number';
		$array['speeddial'][] = 'lookup_owner(stable:string, sowner:string):number';
		$array['sqlops'][] = 'sql_is_null(sres:string, i:number, j:number):number';
		$array['sqlops'][] = 'sql_num_columns(sres:string):number';
		$array['sqlops'][] = 'sql_num_rows(sres:string):number';
		$array['sqlops'][] = 'sql_pvquery(scon:string, squery:string, sres:string):number';
		$array['sqlops'][] = 'sql_query(scon:string, squery:string, sres:string):number';
		$array['sqlops'][] = 'sql_query_async(scon:string, squery:string):number';
		$array['sqlops'][] = 'sql_result_free(sres:string):number';
		$array['sqlops'][] = 'sql_result_get(resid:string, row, col:number):number:number';
		$array['sqlops'][] = 'sql_result_gete(resid:string, row, col:number):number:number';
		$array['sqlops'][] = 'sql_result_getz(resid:string, row, col:number):number:number';
		$array['sqlops'][] = 'sql_xquery(scon:string, squery:string, xavp:string):number';
		$array['ss7ops'][] = 'isup_to_json(proto:number):number';
		$array['sst'][] = 'sst_check_min(flag:number):number';
		$array['statistics'][] = 'reset_stat(sname:string):number';
		$array['statistics'][] = 'update_stat(sname:string, sval:number):number';
		$array['statsc'][] = 'statsc_reset():number';
		$array['statsd'][] = 'statsd_decr(key:string):number';
		$array['statsd'][] = 'statsd_gauge(key:string, val:string):number';
		$array['statsd'][] = 'statsd_incr(key:string):number';
		$array['statsd'][] = 'statsd_set(key:string, val:string):number';
		$array['statsd'][] = 'statsd_start(key:string):number';
		$array['statsd'][] = 'statsd_stop(key:string):number';
		$array['sworker'][] = 'task(gname:string):number';
		$array['tcpops'][] = 'tcp_conid_alive(i_conid:number):number';
		$array['tcpops'][] = 'tcp_conid_state(i_conid:number):number';
		$array['tcpops'][] = 'tcp_enable_closed_event():number';
		$array['tcpops'][] = 'tcp_enable_closed_event_cid(i_conid:number):number';
		$array['tcpops'][] = 'tcp_keepalive_disable():number';
		$array['tcpops'][] = 'tcp_keepalive_disable_cid(i_con:number):number';
		$array['tcpops'][] = 'tcp_keepalive_enable(i_idle:number, i_cnt:number, i_intvl:number):number';
		$array['tcpops'][] = 'tcp_keepalive_enable_cid(i_con:number, i_idle:number, i_cnt:number, i_intvl:number):number';
		$array['tcpops'][] = 'tcp_set_connection_lifetime(i_time:number):number';
		$array['tcpops'][] = 'tcp_set_connection_lifetime_cid(i_conid:number, i_time:number):number';
		$array['tcpops'][] = 'tcp_set_otcpid(vconid:number):number';
		$array['tcpops'][] = 'tcp_set_otcpid_flag(vmode:number):number';
		$array['textops'][] = 'append_body_part(txt:string, ct:string):number';
		$array['textops'][] = 'append_body_part_cd(txt:string, ct:string, cd:string):number';
		$array['textops'][] = 'append_body_part_hex(txt:string, ct:string):number';
		$array['textops'][] = 'append_body_part_hex_cd(htxt:string, ct:string, cd:string):number';
		$array['textops'][] = 'cmp_istr(s1:string, s2:string):number';
		$array['textops'][] = 'cmp_str(s1:string, s2:string):number';
		$array['textops'][] = 'filter_body(content_type:string):number';
		$array['textops'][] = 'get_body_part(ctype:string, pvname:string):number';
		$array['textops'][] = 'get_body_part_raw(ctype:string, pvname:string):number';
		$array['textops'][] = 'has_body():number';
		$array['textops'][] = 'has_body_type(ctype:string):number';
		$array['textops'][] = 'in_list(subject:string, list:string, vsep:string):number';
		$array['textops'][] = 'in_list_prefix(subject:string, list:string, vsep:string):number';
		$array['textops'][] = 'is_audio_on_hold():number';
		$array['textops'][] = 'is_present_hf(hname:string):number';
		$array['textops'][] = 'is_present_hf_re(ematch:string):number';
		$array['textops'][] = 'is_privacy(privacy:string):number';
		$array['textops'][] = 'regex_substring(input:string, regex:string, mindex:number, nmatch:number, dst:string):number';
		$array['textops'][] = 'remove_body_part(content_type:string):number';
		$array['textops'][] = 'remove_hf(hname:string):number';
		$array['textops'][] = 'remove_hf_exp(ematch:string, eskip:string):number';
		$array['textops'][] = 'remove_hf_re(ematch:string):number';
		$array['textops'][] = 'replace(sre:string, sval:string):number';
		$array['textops'][] = 'replace_all(sre:string, sval:string):number';
		$array['textops'][] = 'replace_body(sre:string, sval:string):number';
		$array['textops'][] = 'replace_body_all(sre:string, sval:string):number';
		$array['textops'][] = 'replace_body_atonce(sre:string, sval:string):number';
		$array['textops'][] = 'replace_body_str(mkey:string, rval:string, rmode:string):number';
		$array['textops'][] = 'replace_hdrs(sre:string, sval:string):number';
		$array['textops'][] = 'replace_hdrs_str(mkey:string, rval:string, rmode:string):number';
		$array['textops'][] = 'replace_str(mkey:string, rval:string, rmode:string):number';
		$array['textops'][] = 'search(sre:string):number';
		$array['textops'][] = 'search_append(ematch:string, val:string):number';
		$array['textops'][] = 'search_append_body(ematch:string, val:string):number';
		$array['textops'][] = 'search_body(sre:string):number';
		$array['textops'][] = 'search_hf(hname:string, sre:string, flags:string):number';
		$array['textops'][] = 'set_body(nb:string, nc:string):number';
		$array['textops'][] = 'set_body_multipart(nbody:string, ctype:string, boundary:string):number';
		$array['textops'][] = 'set_body_multipart_boundary(boundary:string):number';
		$array['textops'][] = 'set_body_multipart_content(nbody:string, ctype:string):number';
		$array['textops'][] = 'set_body_multipart_mode():number';
		$array['textops'][] = 'set_reply_body(nb:string, nc:string):number';
		$array['textops'][] = 'starts_with(s1:string, s2:string):number';
		$array['textops'][] = 'subst(subst:string):number';
		$array['textops'][] = 'subst_body(subst:string):number';
		$array['textops'][] = 'subst_hf(hname:string, subst:string, flags:string):number';
		$array['textops'][] = 'subst_uri(subst:string):number';
		$array['textops'][] = 'subst_user(subst:string):number';
		$array['textopsx'][] = 'append_hf_value(hexp:string, val:string):number';
		$array['textopsx'][] = 'assign_hf_value(hexp:string, val:string):number';
		$array['textopsx'][] = 'assign_hf_value2(hexp:string, val:string):number';
		$array['textopsx'][] = 'change_reply_status(code:number, reason:string):number';
		$array['textopsx'][] = 'change_reply_status_code(code:number):number';
		$array['textopsx'][] = 'exclude_hf_value(hexp:string, val:string):number';
		$array['textopsx'][] = 'fnmatch(val:string, match:string):number';
		$array['textopsx'][] = 'fnmatch_ex(val:string, match:string, flags:string):number';
		$array['textopsx'][] = 'hf_value_exists(hexp:string, val:string):number';
		$array['textopsx'][] = 'include_hf_value(hexp:string, val:string):number';
		$array['textopsx'][] = 'insert_hf_value(hexp:string, val:string):number';
		$array['textopsx'][] = 'keep_hf():number';
		$array['textopsx'][] = 'keep_hf_re(sre:string):number';
		$array['textopsx'][] = 'msg_apply_changes():number';
		$array['textopsx'][] = 'msg_set_buffer(obuf:string):number';
		$array['textopsx'][] = 'remove_body():number';
		$array['textopsx'][] = 'remove_hf_value(hexp:string):number';
		$array['textopsx'][] = 'remove_hf_value2(hexp:string, val:string):number';
		$array['tls'][] = 'cget(aname:string):number';
		$array['tls'][] = 'is_peer_verified():number';
		$array['tm'][] = 'ki_t_load_contacts_mode(mode:number):number';
		$array['tm'][] = 't_any_replied():number';
		$array['tm'][] = 't_any_timeout():number';
		$array['tm'][] = 't_branch_replied():number';
		$array['tm'][] = 't_branch_timeout():number';
		$array['tm'][] = 't_check_status(sexp:string):number';
		$array['tm'][] = 't_check_trans():number';
		$array['tm'][] = 't_clean():number';
		$array['tm'][] = 't_drop_replies(mode:string):number';
		$array['tm'][] = 't_drop_replies_all():number';
		$array['tm'][] = 't_get_branch_index():number';
		$array['tm'][] = 't_get_status_code():number';
		$array['tm'][] = 't_grep_status(code:number):number';
		$array['tm'][] = 't_is_canceled():number';
		$array['tm'][] = 't_is_expired():number';
		$array['tm'][] = 't_is_retr_async_reply():number';
		$array['tm'][] = 't_is_set(target:string):number';
		$array['tm'][] = 't_load_contacts():number';
		$array['tm'][] = 't_lookup_cancel():number';
		$array['tm'][] = 't_lookup_cancel_flags(flags:number):number';
		$array['tm'][] = 't_lookup_request():number';
		$array['tm'][] = 't_newtran():number';
		$array['tm'][] = 't_next_contact_flow():number';
		$array['tm'][] = 't_next_contacts():number';
		$array['tm'][] = 't_on_branch(rname:string):number';
		$array['tm'][] = 't_on_branch_failure(rname:string):number';
		$array['tm'][] = 't_on_failure(rname:string):number';
		$array['tm'][] = 't_on_reply(rname:string):number';
		$array['tm'][] = 't_relay():number';
		$array['tm'][] = 't_relay_to_flags(rflags:number):number';
		$array['tm'][] = 't_relay_to_proto(sproto:string):number';
		$array['tm'][] = 't_relay_to_proto_addr(sproto:string, host:string, port:number):number';
		$array['tm'][] = 't_relay_to_proxy(sproxy:string):number';
		$array['tm'][] = 't_relay_to_proxy_flags(sproxy:string, rflags:number):number';
		$array['tm'][] = 't_release():number';
		$array['tm'][] = 't_replicate(suri:string):number';
		$array['tm'][] = 't_reply(code:number, reason:string):number';
		$array['tm'][] = 't_reset_fr():number';
		$array['tm'][] = 't_reset_max_lifetime():number';
		$array['tm'][] = 't_reset_retr():number';
		$array['tm'][] = 't_retransmit_reply():number';
		$array['tm'][] = 't_save_lumps():number';
		$array['tm'][] = 't_send_reply(code:number, reason:string):number';
		$array['tm'][] = 't_set_auto_inv_100(state:number):number';
		$array['tm'][] = 't_set_disable_6xx(state:number):number';
		$array['tm'][] = 't_set_disable_failover(state:number):number';
		$array['tm'][] = 't_set_disable_internal_reply(state:number):number';
		$array['tm'][] = 't_set_fr(fr_inv:number, fr:number):number';
		$array['tm'][] = 't_set_fr_inv(fr_inv:number):number';
		$array['tm'][] = 't_set_max_lifetime(t1:number, t2:number):number';
		$array['tm'][] = 't_set_no_e2e_cancel_reason(state:number):number';
		$array['tm'][] = 't_set_retr(t1:number, t2:number):number';
		$array['tm'][] = 't_uac_send(method:string, ruri:string, nexthop:string, ssock:string, hdrs:string, body:string):number';
		$array['tm'][] = 't_use_uac_headers():number';
		$array['tmrec'][] = 'is_leap_year(y:number):number';
		$array['tmrec'][] = 'is_leap_year_now():number';
		$array['tmrec'][] = 'match(rv:string):number';
		$array['tmrec'][] = 'match_timestamp(rv:string, ti:number):number';
		$array['tmrec'][] = 'time_period_match(period:string):number';
		$array['tmrec'][] = 'time_period_match_timestamp(period:string, ti:number):number';
		$array['tmx'][] = 't_cancel_branches(mode:string):number';
		$array['tmx'][] = 't_cancel_callid(callid_s:string, cseq_s:string, fl:number):number';
		$array['tmx'][] = 't_cancel_callid_reason(callid_s:string, cseq_s:string, fl:number, rcode:number):number';
		$array['tmx'][] = 't_continue(tindex:number, tlabel:number, cbname:string):number';
		$array['tmx'][] = 't_drop():number';
		$array['tmx'][] = 't_drop_rcode(rcode:number):number';
		$array['tmx'][] = 't_flush_flags():number';
		$array['tmx'][] = 't_flush_xflags():number';
		$array['tmx'][] = 't_is_branch_route():number';
		$array['tmx'][] = 't_is_failure_route():number';
		$array['tmx'][] = 't_is_reply_route():number';
		$array['tmx'][] = 't_is_request_route():number';
		$array['tmx'][] = 't_precheck_trans():number';
		$array['tmx'][] = 't_reply_callid(callid_s:string, cseq_s:string, code:number, status_s:string):number';
		$array['tmx'][] = 't_reuse_branch():number';
		$array['tmx'][] = 't_suspend():number';
		$array['tsilo'][] = 'ts_append(_table:string, _ruri:string):number';
		$array['tsilo'][] = 'ts_append_to(tindex:number, tlabel:number, _table:string):number';
		$array['tsilo'][] = 'ts_append_to_uri(tindex:number, tlabel:number, _table:string, _uri:string):number';
		$array['tsilo'][] = 'ts_store():number';
		$array['tsilo'][] = 'ts_store_uri(puri:string):number';
		$array['uac'][] = 'uac_auth():number';
		$array['uac'][] = 'uac_auth_mode(mode:number):number';
		$array['uac'][] = 'uac_reg_disable(attr:string, val:string):number';
		$array['uac'][] = 'uac_reg_enable(attr:string, val:string):number';
		$array['uac'][] = 'uac_reg_lookup(userid:string, sdst:string):number';
		$array['uac'][] = 'uac_reg_refresh(l_uuid:string):number';
		$array['uac'][] = 'uac_reg_request_to(userid:string, imode:number):number';
		$array['uac'][] = 'uac_reg_status(sruuid:string):number';
		$array['uac'][] = 'uac_replace_from(pdsp:string, puri:string):number';
		$array['uac'][] = 'uac_replace_from_uri(puri:string):number';
		$array['uac'][] = 'uac_replace_to(pdsp:string, puri:string):number';
		$array['uac'][] = 'uac_replace_to_uri(puri:string):number';
		$array['uac'][] = 'uac_req_send():number';
		$array['uac'][] = 'uac_restore_from():number';
		$array['uac'][] = 'uac_restore_to():number';
		$array['uac_redirect'][] = 'get_redirects(max_c:number, max_b:number):number';
		$array['uac_redirect'][] = 'get_redirects_acc(max_c:number, max_b:number, reason:string):number';
		$array['uac_redirect'][] = 'get_redirects_all():number';
		$array['uri_db'][] = 'check_from():number';
		$array['uri_db'][] = 'check_to():number';
		$array['uri_db'][] = 'check_uri(suri:string):number';
		$array['uri_db'][] = 'check_uri_realm(suri:string, susername:string, srealm:string):number';
		$array['uri_db'][] = 'does_uri_exist():number';
		$array['userblocklist'][] = 'check_allowlist(stable:string):number';
		$array['userblocklist'][] = 'check_blocklist(stable:string):number';
		$array['userblocklist'][] = 'check_global_blocklist():number';
		$array['userblocklist'][] = 'check_user_allowlist(suser:string, sdomain:string):number';
		$array['userblocklist'][] = 'check_user_allowlist_number(suser:string, sdomain:string, snumber:string):number';
		$array['userblocklist'][] = 'check_user_allowlist_table(suser:string, sdomain:string, snumber:string, stable:string):number';
		$array['userblocklist'][] = 'check_user_blocklist(suser:string, sdomain:string):number';
		$array['userblocklist'][] = 'check_user_blocklist_number(suser:string, sdomain:string, snumber:string):number';
		$array['userblocklist'][] = 'check_user_blocklist_table(suser:string, sdomain:string, snumber:string, stable:string):number';
		$array['utils'][] = 'xcap_auth_status(watcher_uri:string, presentity_uri:string):number';
		$array['websocket'][] = 'close():number';
		$array['websocket'][] = 'close_conid(status:number, reason:string, con:number):number';
		$array['websocket'][] = 'close_reason(status:number, reason:string):number';
		$array['websocket'][] = 'handle_handshake():number';
		$array['xcap_server'][] = 'xcaps_del(uri:string, path:string):number';
		$array['xcap_server'][] = 'xcaps_get(uri:string, path:string):number';
		$array['xcap_server'][] = 'xcaps_put(uri:string, path:string, pbody:string):number';
		$array['xhttp'][] = 'xhttp_reply(code:number, reason:string, ctype:string, body:string):number';
		$array['xhttp_pi'][] = 'dispatch():number';
		$array['xhttp_prom'][] = 'check_uri():number';
		$array['xhttp_prom'][] = 'counter_inc_l0(s_name:string, number:number):number';
		$array['xhttp_prom'][] = 'counter_inc_l1(s_name:string, number:number, l1:string):number';
		$array['xhttp_prom'][] = 'counter_inc_l2(s_name:string, number:number, l1:string, l2:string):number';
		$array['xhttp_prom'][] = 'counter_inc_l3(s_name:string, number:number, l1:string, l2:string, l3:string):number';
		$array['xhttp_prom'][] = 'counter_reset_l0(s_name:string):number';
		$array['xhttp_prom'][] = 'counter_reset_l1(s_name:string, l1:string):number';
		$array['xhttp_prom'][] = 'counter_reset_l2(s_name:string, l1:string, l2:string):number';
		$array['xhttp_prom'][] = 'counter_reset_l3(s_name:string, l1:string, l2:string, l3:string):number';
		$array['xhttp_prom'][] = 'dispatch():number';
		$array['xhttp_prom'][] = 'gauge_reset_l0(s_name:string):number';
		$array['xhttp_prom'][] = 'gauge_reset_l1(s_name:string, l1:string):number';
		$array['xhttp_prom'][] = 'gauge_reset_l2(s_name:string, l1:string, l2:string):number';
		$array['xhttp_prom'][] = 'gauge_reset_l3(s_name:string, l1:string, l2:string, l3:string):number';
		$array['xhttp_prom'][] = 'gauge_set_l0(s_name:string, s_number:string):number';
		$array['xhttp_prom'][] = 'gauge_set_l1(s_name:string, s_number:string, l1:string):number';
		$array['xhttp_prom'][] = 'gauge_set_l2(s_name:string, s_number:string, l1:string, l2:string):number';
		$array['xhttp_prom'][] = 'gauge_set_l3(s_name:string, s_number:string, l1:string, l2:string, l3:string):number';
		$array['xhttp_prom'][] = 'histogram_observe_l0(s_name:string, s_number:string):number';
		$array['xhttp_prom'][] = 'histogram_observe_l1(s_name:string, s_number:string, l1:string):number';
		$array['xhttp_prom'][] = 'histogram_observe_l2(s_name:string, s_number:string, l1:string, l2:string):number';
		$array['xhttp_prom'][] = 'histogram_observe_l3(s_name:string, s_number:string, l1:string, l2:string, l3:string):number';
		$array['xhttp_rpc'][] = 'dispatch():number';
		$array['xlog'][] = 'xalert(lmsg:string):number';
		$array['xlog'][] = 'xcrit(lmsg:string):number';
		$array['xlog'][] = 'xdbg(lmsg:string):number';
		$array['xlog'][] = 'xerr(lmsg:string):number';
		$array['xlog'][] = 'xinfo(lmsg:string):number';
		$array['xlog'][] = 'xlog(slevel:string, lmsg:string):number';
		$array['xlog'][] = 'xnotice(lmsg:string):number';
		$array['xlog'][] = 'xwarn(lmsg:string):number';
		$array['xmlrpc'][] = 'dispatch_rpc():number';
		$array['xmlrpc'][] = 'xmlrpc_reply(rcode:number, reason:string):number';

		return $array;
	}

	private function createFunctionsFromArray(array $array): void
	{
		foreach ($array as $name => $subArray) {
			$pathToFile = __DIR__ . "/../Modules/Functions/{$name}.ts";

			if (!file_exists($pathToFile)) {
				touch($pathToFile, strtotime('-1 days'));

				$myfile = fopen($pathToFile, 'wb') or die("Unable to open file!");

				fwrite(
					$myfile,
					<<<CONTENT
export interface {$name} {

CONTENT
				);

				foreach ($subArray as $functionName) {
					fwrite(
						$myfile,
						<<<CONTENT
	{$functionName};

CONTENT
					);
				}

				fwrite($myfile, '}');

				fclose($myfile);
			}
		}
	}

	private function createKSRFile(array $array): void
	{
		$pathToFile = __DIR__ . "/../KSR.ts";

		if (!file_exists($pathToFile)) {
			touch($pathToFile, strtotime('-1 days'));

			$myfile = fopen($pathToFile, 'wb') or die("Unable to open file!");

			foreach ($array as $name => $subArray) {
				fwrite(
					$myfile,
					<<<CONTENT
import {{$name}} from "./Modules/Functions/{$name}";

CONTENT
				);
			}

			fwrite(
				$myfile,
				<<<CONTENT

export type KSR = {

CONTENT
			);

			foreach ($array as $name => $subArray) {
				fwrite(
					$myfile,
					<<<CONTENT
	{$name}:{$name};

CONTENT
				);
			}
			fwrite(
				$myfile,
				<<<CONTENT
} & KSR_METHODS;
CONTENT
			);

			fclose($myfile);
		}
	}

}
